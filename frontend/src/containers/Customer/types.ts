import { PaginatedList, Pagination } from "@/lib/types";

export const customerTypes = {
    GET_CUSTOMERS_REQUEST: 'GET_CUSTOMERS_REQUEST',
    GET_CUSTOMERS_SUCCESS: 'GET_CUSTOMERS_SUCCESS',
    GET_CUSTOMERS_FAILURE: 'GET_CUSTOMERS_FAILURE',

    GET_CUSTOMER_REQUEST: 'GET_CUSTOMER_REQUEST',
    GET_CUSTOMER_SUCCESS: 'GET_CUSTOMER_SUCCESS',
    GET_CUSTOMER_FAILURE: 'GET_CUSTOMER_FAILURE',

    CREATE_CUSTOMER_REQUEST: 'CREATE_CUSTOMER_REQUEST',
    CREATE_CUSTOMER_SUCCESS: 'CREATE_CUSTOMER_SUCCESS',
    CREATE_CUSTOMER_FAILURE: 'CREATE_CUSTOMER_FAILURE',

    UPDATE_CUSTOMER_REQUEST: 'UPDATE_CUSTOMER_REQUEST',
    UPDATE_CUSTOMER_SUCCESS: 'UPDATE_CUSTOMER_SUCCESS',
    UPDATE_CUSTOMER_FAILURE: 'UPDATE_CUSTOMER_FAILURE',

    DELETE_CUSTOMER_REQUEST: 'DELETE_CUSTOMER_REQUEST',
    DELETE_CUSTOMER_SUCCESS: 'DELETE_CUSTOMER_SUCCESS',
    DELETE_CUSTOMER_FAILURE: 'DELETE_CUSTOMER_FAILURE',

    UPDATE_CUSTOMER_IMAGE_REQUEST: 'UPDATE_CUSTOMER_IMAGE_REQUEST',
    UPDATE_CUSTOMER_IMAGE_SUCCESS: 'UPDATE_CUSTOMER_IMAGE_SUCCESS',
    UPDATE_CUSTOMER_IMAGE_FAILURE: 'UPDATE_CUSTOMER_IMAGE_FAILURE',

    DELETE_CUSTOMER_IMAGE_REQUEST: 'DELETE_CUSTOMER_IMAGE_REQUEST',
    DELETE_CUSTOMER_IMAGE_SUCCESS: 'DELETE_CUSTOMER_IMAGE_SUCCESS',
    DELETE_CUSTOMER_IMAGE_FAILURE: 'DELETE_CUSTOMER_IMAGE_FAILURE',

    CREATE_CUSTOMER_CONTACT_REQUEST: 'CREATE_CUSTOMER_CONTACT_REQUEST',
    CREATE_CUSTOMER_CONTACT_SUCCESS: 'CREATE_CUSTOMER_CONTACT_SUCCESS',
    CREATE_CUSTOMER_CONTACT_FAILURE: 'CREATE_CUSTOMER_CONTACT_FAILURE',

    DELETE_CUSTOMER_CONTACT_REQUEST: 'DELETE_CUSTOMER_CONTACT_REQUEST',
    DELETE_CUSTOMER_CONTACT_SUCCESS: 'DELETE_CUSTOMER_CONTACT_SUCCESS',
    DELETE_CUSTOMER_CONTACT_FAILURE: 'DELETE_CUSTOMER_CONTACT_FAILURE',

    INVITE_CUSTOMER_CONTACT_REQUEST: 'INVITE_CUSTOMER_CONTACT_REQUEST',
    INVITE_CUSTOMER_CONTACT_SUCCESS: 'INVITE_CUSTOMER_CONTACT_SUCCESS',
    INVITE_CUSTOMER_CONTACT_FAILURE: 'INVITE_CUSTOMER_CONTACT_FAILURE',

    RESET_CUSTOMER_STATUS: 'RESET_CUSTOMER_STATUS'
}

export interface Customer {
    id: number | null;
    name: string;
    isCompany: boolean;
    address?: string;
    city?: string;
    district?: string;
    postCode?: string;
    country?: string;
    phoneNumber?: string;
    imageUri?: string;
    website?: string;
    governmentId?: string;
    currencyCode?: string;
    isPotantial: boolean;
    contacts?: Contact[];
}

export interface Contact {
    name: string;
    email: string;
}

export interface CustomerState {
    customers: Customer[];
    customer?: Customer;
    loading: boolean;
    error: string | null;
    status: string | null;
    pagination: Pagination;
}

export interface CustomerAction {
    type: string;
    payload: Customer | Customer[] | PaginatedList<Customer> | string;
}

export interface CustomerPayload extends Customer {}